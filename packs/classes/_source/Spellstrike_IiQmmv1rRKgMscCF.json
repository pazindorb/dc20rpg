{
  "name": "Spellstrike",
  "type": "feature",
  "img": "icons/skills/melee/strike-blade-hooked-orange-blue.webp",
  "system": {
    "description": "<p><strong>Once per Long Rest</strong> when you cast a Spell that only targets one creature, you can choose to deliver the Spell through a Weapon.</p><p>The Spell's range changes to that of your Weapon’s (up to the range of the Spell) and you can add Spell Enhancements, perform Maneuvers, or both.</p><p>When you do, the target makes 1 Physical Save for all Physical Save effects and 1 Mental Save for all Mental Save effects if there are any you cause.</p><p>Make a <strong>Spell Check</strong> against the target’s <strong>PD</strong>. If the Spell forces the target to make a Save, it does so against your Save DC.</p><p><strong>Hit:</strong> The target suffers the damage of the Weapon plus the Spell's damage (if any). <strong>Save Failure:</strong> The target suffers the effects (if any).</p><p>You regain the use of this Feature when you roll for Initiative</p>",
    "tableName": "",
    "source": "",
    "conditional": {
      "hasConditional": false,
      "condition": "",
      "bonus": 0,
      "useFor": "",
      "name": ""
    },
    "isReaction": false,
    "actionType": "",
    "attackFormula": {
      "checkType": "attack",
      "targetDefence": "physical",
      "rollBonus": 0,
      "combatMastery": true,
      "critThreshold": 20,
      "formulaMod": "",
      "halfDmgOnMiss": false
    },
    "duration": {
      "value": null,
      "type": "",
      "timeUnit": ""
    },
    "range": {
      "normal": null,
      "max": null,
      "unit": ""
    },
    "target": {
      "count": null,
      "invidual": true,
      "type": "",
      "areas": {
        "default": {
          "area": "",
          "distance": null,
          "width": null,
          "unit": ""
        }
      }
    },
    "check": {
      "canCrit": false,
      "checkKey": "att",
      "contestedKey": "phy",
      "checkDC": 10
    },
    "formulas": {},
    "enhancements": {},
    "copyEnhancements": {
      "copy": false,
      "copyFor": ""
    },
    "save": {
      "type": "phy",
      "dc": null,
      "calculationKey": "spell",
      "addMastery": false
    },
    "costs": {
      "resources": {
        "actionPoint": null,
        "stamina": null,
        "mana": null,
        "health": null,
        "custom": {}
      },
      "charges": {
        "current": 1,
        "max": null,
        "maxChargesFormula": "1",
        "overriden": false,
        "rechargeFormula": "",
        "reset": "combat",
        "showAsResource": false
      },
      "otherItem": {
        "itemId": "",
        "amountConsumed": 0,
        "consumeCharge": true
      }
    },
    "featureType": "class",
    "featureOrigin": "Spellblade 2",
    "usesWeapon": {
      "weaponId": "",
      "weaponAttack": true
    },
    "effectsConfig": {
      "toggleable": false,
      "active": false,
      "addToChat": false
    },
    "isResource": false,
    "resource": {
      "name": "",
      "resourceKey": "key",
      "reset": "",
      "values": [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ]
    },
    "quickRoll": true,
    "macros": {
      "preItemRoll": "// 0. Select Weapon\nitem.doNotSendToChat = true;\nconst weaponId = item.system.usesWeapon.weaponId;\nconst weapon = actor.items.get(weaponId);\nif (!weapon) {\n  ui.notifications.warn(\"Select weapon first!\");\n  return;\n}\n\n// 1. Select Spell\nconst spells = {};\nactor.items.forEach(item => {\n  if (item.type === \"spell\" && [\"attack\", \"dynamic\"].includes(item.system.actionType)) spells[item.id] = item.name;\n});\nconst spellId = await game.dc20rpg.tools.getSimplePopup(\"select\", {header: \"Select Spell for a Spellstrike\", selectOptions: spells});\nconst spell = actor.items.get(spellId);\nif (!spell) {\n  ui.notifications.warn(\"Select Spell for a Spellstrike!\");\n  return;\n}\n\n// 2. Configure Spell Strike\nconst enhancements = {};\nconst formulas = {};\nspell.allEnhancements.forEach((value, key) => enhancements[key] = value);\nweapon.allEnhancements.forEach((value, key) => enhancements[key] = value);\nif (spell.system.formulas) {\n  Object.entries(spell.system.formulas).forEach(([key, value]) => formulas[key] = value);\n} \nif (weapon.system.formulas) {\n  Object.entries(weapon.system.formulas).forEach(([key, value]) => formulas[key] = value);\n}\n\nconst itemData = {\n  img: item.img,\n  type: \"feature\",\n  name: `Spellstrike (${spell.name})`,\n  system: {\n    description: \"Temporary Spellstrike item, should be removed after the roll was made.\",\n    actionType: \"dynamic\",\n    attackFormula: {\n      checkType: \"spell\",\n      rangeType: weapon.system.attackFormula.rangeType\n    },\n    againstEffect: spell.system.againstEffect,\n    costs: spell.system.costs,\n    enhancements: enhancements,\n    formulas: formulas\n  },\n  effects: {...spell.effects}\n}\n\nconst spellStrike = await Item.create(itemData, { parent: actor });\nif (spellStrike) await game.dc20rpg.tools.promptItemRoll(actor, spellStrike);\nawait item.update({[\"flags.dc20rpg.spellStrikeId\"]: spellStrike._id});",
      "postItemRoll": "const spellStrikeId = item.flags.dc20rpg.spellStrikeId;\nconst spellStrike = actor.items.get(spellStrikeId);\nif (spellStrike) await spellStrike.delete();\nawait item.update({[\"flags.dc20rpg.spellStrikeId\"]: \"\"});"
    }
  },
  "effects": [],
  "folder": "XdafoQoL9C4zLl9Y",
  "sort": 100000,
  "ownership": {
    "default": 0,
    "dOcXwrUs2VunZl0y": 3
  },
  "flags": {},
  "_stats": {
    "compendiumSource": "Item.Wv27tsVKxw22UNus",
    "duplicateSource": "Item.vISLOwR1lUiMl3Rp",
    "coreVersion": "12.331",
    "systemId": "dc20rpg",
    "systemVersion": "0.8.3",
    "createdTime": 1720194117058,
    "modifiedTime": 1734549890629,
    "lastModifiedBy": "dOcXwrUs2VunZl0y"
  },
  "_id": "IiQmmv1rRKgMscCF",
  "_key": "!items!IiQmmv1rRKgMscCF"
}
